@model IEnumerable<ClientOvertime.ViewModels.Employees.EmployeeVM>

@{
    ViewData["Title"] = "Employee";
    Layout = "_LayoutDashboard";
}

<div class="content-wrapper">
    <div class="page-header">
        <h3 class="page-title">
            <span class="page-title-icon bg-gradient-primary text-white me-2">
                <i class="mdi mdi-home"></i>
            </span> Employee
        </h3>
    </div>
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card mt-4">
                <div class="card-body">
                    <h3 class="card-title h3">Datatables Employee</h3>
                    <a href="/employee/create">
                        <button class="btn btn-primary" style="margin-bottom: 15px">
                            <i class="mdi mdi-plus"></i> Create
                        </button>
                    </a>
                    <!-- Table with stripped rows -->
                    <table class="table datatable table-hover table-responsive table-striped" id="data-table">
                        <thead>
                            <tr>
                                <th scope="col">
                                    @Html.DisplayName("No")
                                </th>
                                <th scope="col">
                                    @Html.DisplayNameFor(model => model.Nik)
                                </th>
                                <th scope="col">
                                    @Html.DisplayName("Full Name")
                                </th>
                                @*<th scope="col">
                                @Html.DisplayNameFor(model => model.Gender)
                                </th>*@
                                
                                <th scope="col">
                                    @Html.DisplayNameFor(model => model.Manager)
                                </th>
                               @* <th scope="col">
                                    @Html.DisplayNameFor(model => model.HiringDate)
                                </th>*@
                                <th scope="col">
                                    @Html.DisplayNameFor(model => model.Email)
                                </th>
                                <th scope="col">
                                    @Html.DisplayNameFor(model => model.RoleName)
                                </th>
                                @*<th scope="col">
                                    @Html.DisplayNameFor(model => model.Salary)
                                </th>*@
                                <th scope="col">
                                    @Html.DisplayName("Action")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var i = 1;
                            }
                            @foreach (var item in Model)
                            {
                                <tr>
                                    @{
                                        var culture = new System.Globalization.CultureInfo("id-ID");
                                    }
                                    <td>
                                        @i
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Nik)
                                    </td>
                                    <td>
                                        @{
                                            var fullName = item.FullName;
                                        }
                                        @Html.DisplayFor(x => fullName)
                                    </td>
                                    @*<td>
                                        @Html.DisplayFor(modelItem => item.Gender)
                                    </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Manager)
                                    </td>
                                   @* <td>
                                        @{
                                            var formatHiringDate = item.HiringDate.ToString("dd MMMM yyyy", culture);
                                        }
                                        @Html.DisplayFor(modelItem => formatHiringDate)
                                    </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RoleName)
                                    </td>
                                    @*<td>
                                        @Html.DisplayFor(modelItem => item.Salary)
                                    </td>*@
                                    @*<td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>*@
                                    <td>
                                        <div class="row">
                                            <div class="col-6">
                                                <form action="/employee/update" method="GET">
                                                    <input type="hidden" value="@item.Guid" name="guid" />
                                                    <button type="submit" class="btn btn-primary m-1"><i class="mdi mdi-pencil"></i></button>
                                                </form>
                                            </div>
                                            <div class="col-6">
                                                <form action="/employee/delete" method="POST">
                                                    <input type="hidden" value="@item.Guid" name="guid" />
                                                    <button type="submit" class="btn btn-danger delete-employee"><i class="mdi mdi-delete-forever"></i></button>
                                                </form>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                    <!-- End Table with stripped rows -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tableBody = document.querySelector('tbody');
            tableBody.addEventListener('click', function (event) {
                const deleteButton = event.target.closest('.delete-employee');
                if (deleteButton) {
                    event.preventDefault();
                    const form = deleteButton.closest('form');
                    const guid = form.querySelector('input[name="guid"]').value;

                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to recover this data!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // If the user confirms, submit the form
                            Swal.fire(
                                'Deleted!',
                                'Your data has been Deleted.',
                                'success'
                            ).then(() => {
                                form.submit();
                            });
                        }
                    });
                }
            });
        });
    </script>
}
